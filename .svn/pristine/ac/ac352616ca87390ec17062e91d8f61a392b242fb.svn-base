package com.neu.findme.activity;

import java.io.InputStream;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Rect;
import android.os.Bundle;
import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;
import android.view.Window;
import android.view.WindowManager;

import com.neu.findme.R;
import com.neu.findme.adapter.CanSeeMeListAdapter;
import com.neu.findme.adapter.NoticeListAdapter;
import com.neu.findme.adapter.RecordLocalListAdapter;
import com.neu.findme.adapter.RecordNetListAdapter;
import com.neu.findme.adapter.RecordOtherListAdapter;
import com.neu.findme.adapter.SomeoneListAdapter;
import com.neu.findme.domain.LocalRecordBean;
import com.neu.findme.domain.NetRecordBean;
import com.neu.findme.domain.NoticeBean;
import com.neu.findme.domain.OtherRecordBean;
import com.neu.findme.domain.UserBean;
import com.neu.findme.utils.BitmapUtil;
import com.neu.findme.view.DragImageView;


/**
 * @author fty
 *点击照片详情界面的图片后，展开大图的activity
 *2015-03-09 20:45:18
 */
public class ShowBigPhotoActivity extends Activity {
	private int window_width, window_height;// 控件宽度
	private DragImageView dragImageView;// 自定义控件
	private int state_height;// 状态栏的高度

	private ViewTreeObserver viewTreeObserver;

	// 上个activity传过来的bean
	private int recordBeanId;
	private LocalRecordBean localRecordBean;
	private NetRecordBean netRecordBean;
	private OtherRecordBean otherRecordBean;
	private NoticeBean noticeBean;
	private UserBean someoneInfoBean;
	// 确定数据源的Flag
	private String flag;
	//图片
	private Bitmap bitmap;
	@SuppressWarnings("deprecation")
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		 requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_bigphoto);
		/** 获取可見区域高度 **/
		WindowManager manager = getWindowManager();
		window_width = manager.getDefaultDisplay().getWidth();
		window_height = manager.getDefaultDisplay().getHeight();

		dragImageView = (DragImageView) findViewById(R.id.div_main);
		
		//涉及到照片源的更改
		Intent intent = this.getIntent();
		Bundle bundle = intent.getExtras();
		recordBeanId = bundle.getInt("recordBeanId");
		flag = (String) bundle.get("Flag");
		if (bundle != null && bundle.containsKey("Flag")) {
			if (flag.equals("localFlag")) {
				localRecordBean = RecordLocalListAdapter.recordBeans.get(recordBeanId);
				//取出sd卡中的图片，并根据屏幕大小展示
				bitmap =BitmapUtil.getBitmap(BitmapFactory.decodeFile(localRecordBean.getSdUri().substring(
										localRecordBean.getSdUri().lastIndexOf(":") + 1)), window_width, window_height);
			}
			else if (flag.equals("netFlag")) {
				netRecordBean = RecordNetListAdapter.recordBeans.get(recordBeanId);
				//取出sd卡中的图片，并根据屏幕大小展示
				bitmap =BitmapUtil.getBitmap(BitmapFactory.decodeFile(netRecordBean.getSdUri().substring(
										netRecordBean.getSdUri().lastIndexOf(":") + 1)), window_width, window_height);
			}
			else if (flag.equals("otherFlag")) {
				otherRecordBean = RecordOtherListAdapter.recordBeans.get(recordBeanId);
				//取出sd卡中的图片，并根据屏幕大小展示
				bitmap =BitmapUtil.getBitmap(BitmapFactory.decodeFile(otherRecordBean.getSdUri().substring(
										otherRecordBean.getSdUri().lastIndexOf(":") + 1)), window_width, window_height);
			}
			else if (flag.equals("someoneFlag")) {
				otherRecordBean = SomeoneListAdapter.recordBeans.get(recordBeanId);
				//取出sd卡中的图片，并根据屏幕大小展示
				bitmap =BitmapUtil.getBitmap(BitmapFactory.decodeFile(otherRecordBean.getSdUri().substring(
										otherRecordBean.getSdUri().lastIndexOf(":") + 1)), window_width, window_height);
			}
			else if(flag.equals("noticeFlag")){
				noticeBean = NoticeListAdapter.recordBeans.get(recordBeanId);
				//取出sd卡中的图片，并根据屏幕大小展示
				bitmap =BitmapUtil.getBitmap(BitmapFactory.decodeFile(noticeBean.getSdUri().substring(
										noticeBean.getSdUri().lastIndexOf(":") + 1)), window_width, window_height);
			}
		}
		// 设置图片
		dragImageView.setImageBitmap(bitmap);
		dragImageView.setmActivity(this);//注入Activity.
		/** 测量状态栏高度 **/
		viewTreeObserver = dragImageView.getViewTreeObserver();
		viewTreeObserver
				.addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
					@Override
					public void onGlobalLayout() {
						if (state_height == 0) {
							// 获取状况栏高度
							Rect frame = new Rect();
							getWindow().getDecorView()
									.getWindowVisibleDisplayFrame(frame);
							state_height = frame.top;
							dragImageView.setScreen_H(window_height-state_height);
							dragImageView.setScreen_W(window_width);
						}
					}
				});
	}
	/**
	 * 读取本地资源的图片
	 * 
	 * @param context
	 * @param resId
	 * @return
	 */
	public static Bitmap ReadBitmapById(Context context, int resId) {
		BitmapFactory.Options opt = new BitmapFactory.Options();
		opt.inPreferredConfig = Bitmap.Config.RGB_565;
		opt.inPurgeable = true;
		opt.inInputShareable = true;
		// 获取资源图片
		InputStream is = context.getResources().openRawResource(resId);
		return BitmapFactory.decodeStream(is, null, opt);
	}

}