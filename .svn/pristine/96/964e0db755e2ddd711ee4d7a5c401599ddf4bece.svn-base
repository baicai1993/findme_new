package com.neu.findme.activity;
import java.io.File;
import java.util.List;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.lidroid.xutils.view.annotation.event.OnItemClick;
import com.neu.findme.R;
import com.neu.findme.adapter.SomeoneListAdapter;
import com.neu.findme.domain.OtherRecordBean;
import com.neu.findme.server_db.OtherRecDBServer;
import com.neu.findme.server_web.HttpWebServer;
import com.neu.findme.userInterface.PullDownFreshInterface;
import com.neu.findme.userInterface.PullUpFreshInterface;
import com.neu.findme.utils.FileUtil;
import com.neu.findme.utils.JsonParseUtils;
import com.neu.findme.utils.MyApplication;
import com.neu.findme.view.PullToRefreshView;

/**
 * @author fty
 *在“我可见的”界面点击某一用户可以查看他自己的网络记录，同样有上下拉刷新功能
 *图片和数据都和监控记录统一存储
 *每次进入优先读取数据库信息
 *2015-03-09 20:48:38
 */
public class SomeoneRecordActivity extends FragmentActivity implements PullDownFreshInterface,PullUpFreshInterface{
	@ViewInject(R.id.main_title)
	private TextView mainTitle;
	@ViewInject(R.id.backButton)
	private Button backButton;
	@ViewInject(R.id.listView)
	private ListView listView;
	private OtherRecDBServer dbServer;
	private HttpWebServer webServer;
	private SomeoneListAdapter listViewAdapter;
	private String someoneId;
	private String someoneName;
	//上下拉刷新相关
	@ViewInject(R.id.pullRefreshBar)
	private PullToRefreshView pullRefreshBar;
	@OnClick(R.id.backButton)
	public void backButtonListener(View view){
		SomeoneRecordActivity.this.finish();
	}
	@OnItemClick(R.id.listView)
	public void listItemListener(AdapterView<?> parent, View view,int position, long id){
		Intent intent = new Intent(this,PhotoRecordDetailActivity.class);
		intent.putExtra("recordBeanId", position);
		intent.putExtra("bean", SomeoneListAdapter.recordBeans.get(position));
		intent.putExtra("flag", "someoneFlag");
		startActivity(intent);
	}
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_someone_record);
		ViewUtils.inject(this);
		pullRefreshBar.PullDownParent = this;
		pullRefreshBar.PullUpParent = this;
		dbServer = new OtherRecDBServer(this);
		webServer = new HttpWebServer();
		Intent intent = getIntent();
		someoneName = intent.getExtras().get("someoneName")+"";
		someoneId = intent.getExtras().getString("someoneId")+"";
		mainTitle.setText(someoneName);
		initListData();//初始化列表数据

	}
	//上拉下拉调用的方法
	@Override
	public void PullUpFresh() {
		// TODO Auto-generated method stub
		if(SomeoneListAdapter.recordBeans.size()==0){
			webServer.getNetPhotoRecords(1, someoneId, getRecordBeansRC);
		}else {
			webServer.getNetPhotoBeansBefore(SomeoneListAdapter.recordBeans.
					get(SomeoneListAdapter.recordBeans.size()-1).getUpLoadedTime(), someoneId, pullUpRC);
		}
	}
	@Override
	public void PullDownFresh() {
		// TODO Auto-generated method stub
		if(SomeoneListAdapter.recordBeans.size()==0){
			webServer.getNetPhotoRecords(1, someoneId, getRecordBeansRC);
		}else {
			webServer.getNetPhotoBeansAfter(SomeoneListAdapter.recordBeans.get(0).getUpLoadedTime(), someoneId, pullDownRC);
		}
	}
	private void downloadPhoto(OtherRecordBean bean){
		bean.setSdUri(FileUtil.OTHER_PATH+someoneId+File.separator+bean.getPhotoId());
		if(!(new File(bean.getSdUri().toString().substring(bean.getSdUri().toString().indexOf(":")+1)).exists())){
			webServer.downloadPhoto(downloadPhotoRC, bean.getPhotoId(), bean.getSdUri());
		}
	}
	private void initListData(){
		List< OtherRecordBean> list = dbServer.queryOnesInOrder(OtherRecordBean.class, "userId",someoneId, true);
		if(list.size()>0){
			listViewAdapter = new SomeoneListAdapter(this, list);
			listView.setAdapter(listViewAdapter);
		}else {
			webServer.getNetPhotoRecords(1, someoneId, getRecordBeansRC);
		}
	}
	//加载某一页的记录
	private RequestCallBack<String> getRecordBeansRC = new RequestCallBack<String>() {

		@Override
		public void onFailure(HttpException arg0, String arg1) {
			// TODO Auto-generated method stub
			pullRefreshBar.onHeaderRefreshComplete();
		}

		@SuppressWarnings("unchecked")
		@Override
		public void onSuccess(ResponseInfo<String> arg0) {
			// TODO Auto-generated method stub
			pullRefreshBar.onHeaderRefreshComplete();
			List<OtherRecordBean> list = (List<OtherRecordBean>) JsonParseUtils.jsonToEntitylist(arg0.result, OtherRecordBean.class);
			if(list.size()>0){
				//更新列表内数据的sdUri
				for(OtherRecordBean bean:list){
					downloadPhoto(bean);
				}
				listViewAdapter = new SomeoneListAdapter(SomeoneRecordActivity.this, list);
				listView.setAdapter(listViewAdapter);
				dbServer.addListOrUpdate(list);//加入数据库
			}
		}
	};
	//下拉时加载记录
	private RequestCallBack<String> pullDownRC = new RequestCallBack<String>() {

		@Override
		public void onFailure(HttpException arg0, String arg1) {
			// TODO Auto-generated method stub
			pullRefreshBar.onHeaderRefreshComplete();
			Toast.makeText(SomeoneRecordActivity.this, MyApplication.getApplication().
					getString(R.string.refresh_fail), Toast.LENGTH_SHORT).show();
		}

		@SuppressWarnings("unchecked")
		@Override
		public void onSuccess(ResponseInfo<String> arg0) {
			// TODO Auto-generated method stub
			pullRefreshBar.onHeaderRefreshComplete();
			List<OtherRecordBean> list = (List<OtherRecordBean>) JsonParseUtils.jsonToEntitylist(arg0.result, OtherRecordBean.class);
			//更新每条记录的sdUri
			if(list.size()>0){
				SomeoneListAdapter.recordBeans.addAll(0, list);
				listViewAdapter.notifyDataSetChanged();
			for(OtherRecordBean bean:SomeoneListAdapter.recordBeans){
				downloadPhoto(bean);
			}
				dbServer.addListOrUpdate(list);//加入数据库
			}else {
				Toast.makeText(SomeoneRecordActivity.this, MyApplication.getApplication().
						getString(R.string.refresh_newest), Toast.LENGTH_SHORT).show();
			}
		}
	};
	//上拉时加载记录
	private RequestCallBack<String> pullUpRC = new RequestCallBack<String>() {
		@Override
		public void onFailure(HttpException arg0, String arg1) {
			// TODO Auto-generated method stub
			pullRefreshBar.onFooterRefreshComplete();
			Toast.makeText(SomeoneRecordActivity.this, MyApplication.getApplication().
					getString(R.string.refresh_fail), Toast.LENGTH_SHORT).show();
		}
		@SuppressWarnings("unchecked")
		@Override
		public void onSuccess(ResponseInfo<String> arg0) {
			// TODO Auto-generated method stub
			pullRefreshBar.onFooterRefreshComplete();
			List<OtherRecordBean> list = (List<OtherRecordBean>) JsonParseUtils.jsonToEntitylist(arg0.result, OtherRecordBean.class);
			if(list.size()>0){
				SomeoneListAdapter.recordBeans.addAll(SomeoneListAdapter.recordBeans.size(), list);
				listViewAdapter.notifyDataSetChanged();
			for(OtherRecordBean bean:SomeoneListAdapter.recordBeans){
				downloadPhoto(bean);
			}
				dbServer.addListOrUpdate(list);//加入数据库
			}else {
				Toast.makeText(SomeoneRecordActivity.this, MyApplication.getApplication().
						getString(R.string.refresh_noMoreOld), Toast.LENGTH_SHORT).show();
			}
		}
	};
	private RequestCallBack<File> downloadPhotoRC = new RequestCallBack<File>() {

		@Override
		public void onFailure(HttpException arg0, String arg1) {
			// TODO Auto-generated method stub
			Log.e("ftyfty", arg1);
		}

		@Override
		public void onSuccess(ResponseInfo<File> arg0) {
			// TODO Auto-generated method stub
			listViewAdapter.notifyDataSetChanged();
		}
	};
}